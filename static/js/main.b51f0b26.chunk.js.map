{"version":3,"sources":["components/Todo.js","components/FormInput.js","components/FilterButton.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","props","ListGroupItem","Row","className","Col","sm","Form","Check","type","label","name","defaultChecked","completed","onChange","toggleCompleted","id","Button","size","onClick","deleteTask","FormInput","useState","setName","onSubmit","e","preventDefault","addTask","Group","controlId","Label","Control","target","value","autoComplete","placeholder","variant","FilterButton","setFilter","filterName","Badge","pill","filterQuantity","FILTER_MAP","ALL","ACTIVE","task","COMPLETED","bname","Object","keys","App","tasks","allTasks","setallTasks","filters","length","filter","updatedTasks","map","remainingTasks","filterList","button","taskList","Container","md","newTask","nanoid","ListGroup","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b51f0b26.chunk.js","sourcesContent":["import React from \"react\";\nimport { ListGroupItem, Row, Col, Form, Button } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nexport default function Todo(props) {\n  return (\n    <ListGroupItem>\n      <Row className=\"px-3\">\n        <Col sm=\"10\">\n          <Form.Check\n            type=\"checkbox\"\n            label={props.name}\n            defaultChecked={props.completed}\n            onChange={() => props.toggleCompleted(props.id)}\n          ></Form.Check>\n        </Col>\n        <Col sm=\"2\">\n          <Button\n            type=\"button\"\n            size=\"sm\"\n            onClick={() => props.deleteTask(props.id)}\n          >\n            Delete\n          </Button>\n        </Col>\n      </Row>\n    </ListGroupItem>\n  );\n}\n","import React from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useState } from \"react\";\n\nexport default function FormInput(props) {\n  const [name, setName] = useState(\"\");\n\n  function handleChange(e) {\n    setName(e.target.value);\n  }\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (!name) return;\n    props.addTask(name);\n    setName(\"\");\n  }\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Group className=\"mb-3\" controlId=\"formTask\">\n        <Form.Label>Enter your Task</Form.Label>\n        <Form.Control\n          onChange={handleChange}\n          size=\"lg\"\n          type=\"text\"\n          autoComplete=\"off\"\n          placeholder=\"Enter your task\"\n          value={name}\n        />\n      </Form.Group>\n      <Button variant=\"primary\" type=\"submit\">\n        Submit\n      </Button>\n    </Form>\n  );\n}\n","import React from \"react\";\nimport { Button, Badge } from \"react-bootstrap\";\n\nexport default function FilterButton(props) {\n  return (\n    <Button\n      variant=\"outline-primary\"\n      onClick={() => props.setFilter(props.filterName)}\n    >\n      {props.filterName}{\" \"}\n      <Badge variant=\"success\" pill>\n        {props.filterQuantity}\n      </Badge>\n    </Button>\n  );\n}\n","import \"./App.css\";\nimport React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Todo from \"./components/Todo\";\nimport FormInput from \"./components/FormInput\";\nimport { Container, Col, Row, ListGroup } from \"react-bootstrap\";\nimport FilterButton from \"./components/FilterButton\";\nimport { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\n\nconst FILTER_MAP = {\n  ALL: () => true,\n  ACTIVE: (task) => !task.completed,\n  COMPLETED: (task) => task.completed,\n};\n\nconst bname = Object.keys(FILTER_MAP);\n\nfunction App(props) {\n  const [allTasks, setallTasks] = useState(props.tasks);\n\n  const filters = [\n    { filterName: bname[0], filterQuantity: `${allTasks.length}` },\n    {\n      filterName: bname[1],\n      filterQuantity: `${allTasks.filter((task) => !task.completed).length}`,\n    },\n    {\n      filterName: bname[2],\n      filterQuantity: `${allTasks.filter((task) => task.completed).length}`,\n    },\n  ];\n\n  const [filter, setFilter] = useState(\"ALL\");\n\n  function toggleCompleted(id) {\n    const updatedTasks = allTasks.map((task) => {\n      if (id === task.id) {\n        return { ...task, completed: !task.completed };\n      }\n      return task;\n    });\n    setallTasks(updatedTasks);\n  }\n\n  function addTask(name) {\n    const newTask = {\n      id: \"todo-\" + nanoid(),\n      name: name,\n      completed: false,\n    };\n    setallTasks([...allTasks, newTask]);\n  }\n\n  function deleteTask(id) {\n    const remainingTasks = allTasks.filter((task) => task.id !== id);\n    setallTasks(remainingTasks);\n  }\n\n  const filterList = filters.map((button) => (\n    <FilterButton\n      key={button.filterName}\n      filterName={button.filterName}\n      filterQuantity={button.filterQuantity}\n      setFilter={setFilter}\n    />\n  ));\n  const taskList = allTasks\n    .filter(FILTER_MAP[filter])\n    .map((task) => (\n      <Todo\n        id={task.id}\n        name={task.name}\n        completed={task.completed}\n        key={task.id}\n        deleteTask={deleteTask}\n        toggleCompleted={toggleCompleted}\n      />\n    ));\n  return (\n    <Container className=\"mt-5 Todo-body px-5\">\n      <Row className=\"justify-content-center\">\n        <Col md=\"8\" className=\"text-center my-5\">\n          <div>\n            <h1>DayTask</h1>\n            <h4>Never miss a task</h4>\n          </div>\n          <hr />\n        </Col>\n        <Col md=\"8\">\n          <FormInput addTask={addTask} />\n        </Col>\n        <Col md=\"8\" className=\"my-5 btn-group\">\n          {filterList}\n        </Col>\n        <Col md=\"8\">\n          <ListGroup className=\"mb-5\">{taskList}</ListGroup>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst DATA = [\n  // { id: \"todo-1\", name: \"Clean\", completed: true },\n  // { id: \"todo-2\", name: \"Cook\", completed: true },\n  // { id: \"todo-3\", name: \"Gym\", completed: false },\n];\n\nReactDOM.render(\n  <React.StrictMode>\n    <App tasks={DATA} />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}